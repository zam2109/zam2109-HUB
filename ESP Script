
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local highlightTemplate = Instance.new("Highlight")
highlightTemplate.Name = "Highlight"

local isScriptActive = true -- Flag to toggle ESP
local isGuiVisible = true -- Flag to toggle GUI visibility

-- Create a ScreenGui
local player = Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MainGUI"
screenGui.ResetOnSpawn = false -- Ensure GUI persists after respawn
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main draggable GUI with rainbow border
local outerFrame = Instance.new("Frame")
outerFrame.Size = UDim2.new(0, 310, 0, 160) -- Slightly larger than main frame for the border
outerFrame.Position = UDim2.new(0.5, -155, 0.5, -80)
outerFrame.BackgroundTransparency = 1
outerFrame.Visible = true -- Initially visible
outerFrame.Parent = screenGui

local rainbowFrame = Instance.new("Frame")
rainbowFrame.Size = UDim2.new(1, 0, 1, 0)
rainbowFrame.BackgroundColor3 = Color3.new(1, 1, 1)
rainbowFrame.Parent = outerFrame

local rainbowGradient = Instance.new("UIGradient")
rainbowGradient.Parent = rainbowFrame

-- Animate the gradient for the rainbow effect
RunService.Heartbeat:Connect(function()
    local t = tick() * 0.2
    rainbowGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromHSV(t % 1, 1, 1)),
        ColorSequenceKeypoint.new(0.5, Color3.fromHSV((t + 0.5) % 1, 1, 1)),
        ColorSequenceKeypoint.new(1, Color3.fromHSV(t % 1, 1, 1)),
    })
end)

local draggableFrame = Instance.new("Frame")
draggableFrame.Size = UDim2.new(0, 300, 0, 150)
draggableFrame.Position = UDim2.new(0, 5, 0, 5) -- Offset to fit inside the rainbow border
draggableFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
draggableFrame.BorderSizePixel = 0
draggableFrame.Parent = outerFrame

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 12)
uiCorner.Parent = draggableFrame

-- Title bar for dragging
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleLabel.Text = "Draggable GUI"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.Parent = draggableFrame

-- Toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.8, 0, 0.4, 0)
toggleButton.Position = UDim2.new(0.1, 0, 0.5, -25)
toggleButton.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSans
toggleButton.TextSize = 20
toggleButton.Text = "ESP: ON"
toggleButton.Parent = draggableFrame

local uiCornerButton = Instance.new("UICorner")
uiCornerButton.CornerRadius = UDim.new(0, 8)
uiCornerButton.Parent = toggleButton

-- Small draggable toggle GUI for showing/hiding main GUI
local toggleGuiFrame = Instance.new("Frame")
toggleGuiFrame.Size = UDim2.new(0, 60, 0, 60)
toggleGuiFrame.Position = UDim2.new(0, 10, 0, 10)
toggleGuiFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggleGuiFrame.BorderSizePixel = 0
toggleGuiFrame.Parent = screenGui

local uiCornerToggle = Instance.new("UICorner")
uiCornerToggle.CornerRadius = UDim.new(1, 0) -- Make it perfectly round
uiCornerToggle.Parent = toggleGuiFrame

local toggleGuiImage = Instance.new("ImageButton")
toggleGuiImage.Size = UDim2.new(1, 0, 1, 0)
toggleGuiImage.Image = "rbxassetid://82145301120414" -- Replace with a valid image ID
toggleGuiImage.Parent = toggleGuiFrame

local uiCornerToggleImage = Instance.new("UICorner")
uiCornerToggleImage.CornerRadius = UDim.new(1, 0)
uiCornerToggleImage.Parent = toggleGuiImage

-- Function to apply highlight
local function applyHighlight(targetPlayer)
    if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = targetPlayer.Character.HumanoidRootPart
        if not rootPart:FindFirstChild("Highlight") then
            local highlight = highlightTemplate:Clone()
            highlight.Adornee = targetPlayer.Character
            highlight.Parent = rootPart
        end
    end
end

-- Function to remove highlight
local function removeHighlight(targetPlayer)
    if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = targetPlayer.Character.HumanoidRootPart
        local highlight = rootPart:FindFirstChild("Highlight")
        if highlight then
            highlight:Destroy()
        end
    end
end

-- Function to sync ESP for all players
local function syncESP()
    for _, targetPlayer in pairs(Players:GetPlayers()) do
        if isScriptActive then
            applyHighlight(targetPlayer)
        else
            removeHighlight(targetPlayer)
        end
    end
end

-- Toggle ESP functionality
toggleButton.MouseButton1Click:Connect(function()
    isScriptActive = not isScriptActive
    toggleButton.Text = isScriptActive and "ESP: ON" or "ESP: OFF"
    syncESP()
end)

-- Toggle main GUI visibility
toggleGuiImage.MouseButton1Click:Connect(function()
    isGuiVisible = not isGuiVisible
    outerFrame.Visible = isGuiVisible
end)

-- Enable dragging for GUI
local function enableDragging(frame, dragHandle)
    local dragging = false
    local dragStart, startPos

    dragHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)

    dragHandle.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    dragHandle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
end

enableDragging(outerFrame, titleLabel)
enableDragging(toggleGuiFrame, toggleGuiImage)

-- Sync ESP for players joining or leaving
Players.PlayerAdded:Connect(function(newPlayer)
    newPlayer.CharacterAdded:Connect(function()
        if isScriptActive then
            applyHighlight(newPlayer)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(leavingPlayer)
    removeHighlight(leavingPlayer)
end)

-- Periodically sync ESP for all players
RunService.Heartbeat:Connect(syncESP)
