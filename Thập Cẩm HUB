local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\235\4","\77\197\42\188\32\57\213\90"),function(v42) if (v9(v42,2)==(253 -172)) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,1,1));return "";end end else local v103=v10(v8(v42,16));if v30 then local v109=v13(v103,v30);v30=nil;return v109;else return v103;end end end);local function v31(v43,v44,v45) if v45 then local v104=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v104-(v104%1) ;else local v105=0;local v106;while true do if (v105==0) then v106=2^(v44-1) ;return (((v43%(v106 + v106))>=v106) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (0==v47) then v48,v49=v9(v27,v29,v29 + (5 -3) );v29=v29 + 2 ;v47=1;end if (1==v47) then return (v49 * 256) + v48 ;end end end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + (7 -3) ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==1) then v57=1;v58=(v31(v56,1,20) * ((4 -2)^32)) + v55 ;v54=2;end if (v54==0) then v55=v34();v56=v34();v54=1;end if (2==v54) then v59=v31(v56,21,650 -(555 + 64) );v60=((v31(v56,32)==(932 -(857 + 74))) and  -1) or 1 ;v54=3;end if (v54==3) then if (v59==0) then if (v58==(568 -(367 + 201))) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==(927 -(214 + 713))) and (v60 * (1/(0 + 0)))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^(9 + 43)))) ;end end end local function v36(v61) local v62;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;local v63={};for v77=878 -(282 + 595) , #v62 do v63[v77]=v10(v9(v11(v62,v77,v77)));end return v14(v63);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v79=1,v68 do local v80=v32();local v81;if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v69[v79]=v81;end v67[3]=v32();for v83=1,v34() do local v84=0;local v85;while true do if (0==v84) then v85=v32();if (v31(v85,1,1)==0) then local v116=0;local v117;local v118;local v119;while true do if (v116==1) then v119={v33(),v33(),nil,nil};if (v117==0) then local v121=0;while true do if (v121==0) then v119[3]=v33();v119[4]=v33();break;end end elseif (v117==1) then v119[3]=v34();elseif (v117==2) then v119[3]=v34() -(2^16) ;elseif (v117==3) then v119[3]=v34() -((1272 -(226 + 1044))^16) ;v119[4]=v33();end v116=2;end if (v116==0) then v117=v31(v85,1639 -(1523 + 114) ,3);v118=v31(v85,4,6);v116=1;end if (2==v116) then if (v31(v118,1,1)==1) then v119[8 -6 ]=v69[v119[2]];end if (v31(v118,2,2)==1) then v119[3]=v69[v119[3]];end v116=3;end if (v116==3) then if (v31(v118,3,120 -(32 + 85) )==1) then v119[4]=v69[v119[4]];end v64[v83]=v119;break;end end end break;end end end for v86=1,v34() do v65[v86-1 ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...) local v88=v74;local v89=v75;local v90=v76;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v107=0,v96 do if (v107>=v90) then v94[v107-v90 ]=v95[v107 + 1 ];else v98[v107]=v95[v107 + 1 + 0 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v108=0;while true do if (0==v108) then v100=v88[v92];v101=v100[1];v108=1;end if (1==v108) then if (v101<=44) then if (v101<=21) then if (v101<=10) then if (v101<=4) then if (v101<=1) then if (v101>0) then local v134=0;local v135;while true do if (v134==0) then v135=v100[2];v98[v135]=v98[v135](v21(v98,v135 + 1 ,v93));break;end end else v98[v100[2]]();end elseif (v101<=2) then v92=v100[3];elseif (v101>3) then local v230=0;local v231;local v232;while true do if (v230==0) then v231=v100[2];v232=v98[v100[3]];v230=1;end if (v230==1) then v98[v231 + 1 ]=v232;v98[v231]=v232[v100[4]];break;end end else v98[v100[2]][v98[v100[1 + 2 ]]]=v98[v100[4]];end elseif (v101<=7) then if (v101<=5) then v98[v100[2]]=v98[v100[960 -(892 + 65) ]] + v100[4] ;elseif (v101==6) then local v235=v100[2];v98[v235]=v98[v235](v98[v235 + 1 ]);else v98[v100[2]]=v72[v100[3]];end elseif (v101<=8) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>9) then local v240=0;local v241;while true do if (v240==0) then v241=v100[2];v98[v241](v21(v98,v241 + 1 ,v93));break;end end else local v242=0;local v243;local v244;local v245;while true do if (1==v242) then v245=v100[3];for v406=1,v245 do v244[v406]=v98[v243 + v406 ];end break;end if (0==v242) then v243=v100[2];v244=v98[v243];v242=1;end end end elseif (v101<=15) then if (v101<=12) then if (v101>11) then local v138=0;local v139;while true do if (v138==0) then v139=v100[2];do return v21(v98,v139,v93);end break;end end else local v140=v100[4 -2 ];local v141=v98[v140];for v209=v140 + 1 ,v93 do v15(v141,v98[v209]);end end elseif (v101<=13) then local v142=0;local v143;while true do if (v142==0) then v143=v100[3 -1 ];v98[v143](v98[v143 + 1 ]);break;end end elseif (v101>14) then local v246=v100[2];local v247,v248=v91(v98[v246](v21(v98,v246 + (1 -0) ,v93)));v93=(v248 + v246) -1 ;local v249=0;for v324=v246,v93 do v249=v249 + (351 -(87 + 263)) ;v98[v324]=v247[v249];end else do return v98[v100[2]]();end end elseif (v101<=18) then if (v101<=16) then local v144=v100[2];local v145,v146=v91(v98[v144](v98[v144 + 1 ]));v93=(v146 + v144) -1 ;local v147=180 -(67 + 113) ;for v210=v144,v93 do v147=v147 + 1 + 0 ;v98[v210]=v145[v147];end elseif (v101>17) then v98[v100[2]]=v100[3] + v98[v100[4]] ;else v98[v100[2]]=v98[v100[3]]%v98[v100[9 -5 ]] ;end elseif (v101<=19) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v101==20) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3 + 0 ];end else v98[v100[2]]={};end elseif (v101<=32) then if (v101<=26) then if (v101<=23) then if (v101>22) then v98[v100[2]][v98[v100[3]]]=v98[v100[4]];else v98[v100[2]]= #v98[v100[11 -8 ]];end elseif (v101<=24) then v98[v100[2]][v98[v100[3]]]=v100[956 -(802 + 150) ];elseif (v101>25) then local v253=v100[5 -3 ];local v254,v255=v91(v98[v253](v21(v98,v253 + 1 ,v100[3])));v93=(v255 + v253) -1 ;local v256=0;for v327=v253,v93 do local v328=0;while true do if (v328==0) then v256=v256 + 1 ;v98[v327]=v254[v256];break;end end end else v98[v100[2]][v100[3]]=v100[4];end elseif (v101<=29) then if (v101<=27) then local v154=0;local v155;while true do if (v154==0) then v155=v100[2];v98[v155]=v98[v155](v21(v98,v155 + 1 ,v93));break;end end elseif (v101==28) then v98[v100[2]]=v100[3];else local v261=0;local v262;local v263;local v264;while true do if (v261==1) then v264=v98[v262] + v263 ;v98[v262]=v264;v261=2;end if (v261==0) then v262=v100[2];v263=v98[v262 + (3 -1) ];v261=1;end if (v261==2) then if (v263>0) then if (v264<=v98[v262 + 1 ]) then local v423=0;while true do if (v423==0) then v92=v100[3];v98[v262 + 3 ]=v264;break;end end end elseif (v264>=v98[v262 + 1 ]) then local v424=0;while true do if (v424==0) then v92=v100[3];v98[v262 + 3 ]=v264;break;end end end break;end end end elseif (v101<=30) then local v156=0;local v157;local v158;local v159;while true do if (v156==0) then v157=v100[2];v158=v98[v157];v156=1;end if (v156==1) then v159=v98[v157 + 2 ];if (v159>0) then if (v158>v98[v157 + 1 ]) then v92=v100[3];else v98[v157 + 3 ]=v158;end elseif (v158<v98[v157 + 1 ]) then v92=v100[3];else v98[v157 + 3 + 0 ]=v158;end break;end end elseif (v101>(1028 -(915 + 82))) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=38) then if (v101<=35) then if (v101<=33) then for v213=v100[2],v100[3] do v98[v213]=nil;end elseif (v101==34) then local v266=0;local v267;while true do if (v266==0) then v267=v100[2];v98[v267]=v98[v267](v98[v267 + (2 -1) ]);break;end end else v92=v100[3];end elseif (v101<=36) then local v160=v100[2];local v161=v98[v160];for v215=v160 + 1 ,v100[2 + 1 ] do v15(v161,v98[v215]);end elseif (v101==37) then for v334=v100[2],v100[3] do v98[v334]=nil;end else v98[v100[2 -0 ]]=v98[v100[3]];end elseif (v101<=41) then if (v101<=39) then local v162=v100[2];local v163,v164=v91(v98[v162](v21(v98,v162 + 1 ,v93)));v93=(v164 + v162) -1 ;local v165=0;for v216=v162,v93 do v165=v165 + 1 ;v98[v216]=v163[v165];end elseif (v101==40) then v98[v100[2]]=v98[v100[3]][v100[1191 -(1069 + 118) ]];else local v273=v100[2];do return v98[v273](v21(v98,v273 + 1 ,v100[3]));end end elseif (v101<=(94 -52)) then v98[v100[2]]=v73[v100[6 -3 ]];elseif (v101>(8 + 35)) then local v274=v100[2];v98[v274](v21(v98,v274 + 1 ,v93));elseif (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=67) then if (v101<=55) then if (v101<=49) then if (v101<=46) then if (v101>(79 -34)) then v98[v100[2 + 0 ]]=v98[v100[3]][v100[4]];else local v170=v100[2];local v171=v98[v170];local v172=v98[v170 + 2 ];if (v172>0) then if (v171>v98[v170 + (792 -(368 + 423)) ]) then v92=v100[3];else v98[v170 + 3 ]=v171;end elseif (v171<v98[v170 + 1 ]) then v92=v100[3];else v98[v170 + 3 ]=v171;end end elseif (v101<=(147 -100)) then local v173=v100[2];v98[v173]=v98[v173](v21(v98,v173 + 1 ,v100[21 -(10 + 8) ]));elseif (v101==48) then do return;end else v98[v100[2]]={};end elseif (v101<=52) then if (v101<=50) then local v175=v89[v100[3]];local v176;local v177={};v176=v18({},{[v7("\63\114\82\32\176\241\24","\148\96\45\59\78\212")]=function(v219,v220) local v221=v177[v220];return v221[1][v221[2]];end,[v7("\207\47\88\183\231\25\88\182\245\8","\210\144\112\54")]=function(v222,v223,v224) local v225=v177[v223];v225[1][v225[2]]=v224;end});for v227=1,v100[4] do v92=v92 + 1 ;local v228=v88[v92];if (v228[1]==(307 -227)) then v177[v227-1 ]={v98,v228[3]};else v177[v227-1 ]={v72,v228[3]};end v97[ #v97 + 1 ]=v177;end v98[v100[2]]=v40(v175,v176,v73);elseif (v101>51) then v98[v100[2]][v100[3]]=v100[4];else local v278=0;local v279;local v280;while true do if (1==v278) then for v411=v279 + 1 ,v93 do v15(v280,v98[v411]);end break;end if (v278==0) then v279=v100[2];v280=v98[v279];v278=1;end end end elseif (v101<=53) then local v179=0;local v180;local v181;local v182;local v183;while true do if (v179==2) then for v371=v180,v93 do v183=v183 + 1 ;v98[v371]=v181[v183];end break;end if (v179==0) then v180=v100[2];v181,v182=v91(v98[v180]());v179=1;end if (1==v179) then v93=(v182 + v180) -1 ;v183=0;v179=2;end end elseif (v101==54) then local v281=v100[2];v98[v281](v98[v281 + 1 ]);else local v282=v100[2];local v283,v284=v91(v98[v282](v21(v98,v282 + 1 ,v100[445 -(416 + 26) ])));v93=(v284 + v282) -1 ;local v285=0;for v339=v282,v93 do local v340=0;while true do if (0==v340) then v285=v285 + 1 ;v98[v339]=v283[v285];break;end end end end elseif (v101<=61) then if (v101<=58) then if (v101<=56) then v98[v100[2]]=v73[v100[3]];elseif (v101==57) then v98[v100[2]][v100[3]]=v98[v100[4]];else do return;end end elseif (v101<=59) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>(191 -131)) then local v289=v100[2];do return v98[v289](v21(v98,v289 + 1 ,v100[3]));end else local v290=v100[2];do return v21(v98,v290,v93);end end elseif (v101<=64) then if (v101<=(27 + 35)) then v98[v100[3 -1 ]][v98[v100[3]]]=v100[4];elseif (v101==63) then v98[v100[2]]=v72[v100[3]];else v98[v100[440 -(145 + 293) ]]=v100[433 -(44 + 386) ]~=0 ;end elseif (v101<=(1551 -(998 + 488))) then v98[v100[2]]= #v98[v100[3]];elseif (v101>66) then do return v98[v100[2]]();end elseif v98[v100[2]] then v92=v92 + 1 + 0 ;else v92=v100[3];end elseif (v101<=78) then if (v101<=72) then if (v101<=69) then if (v101>68) then v98[v100[2]]=v40(v89[v100[3]],nil,v73);else local v190=0;local v191;while true do if (v190==0) then v191=v100[2 + 0 ];v98[v191]=v98[v191]();break;end end end elseif (v101<=70) then local v192=0;local v193;local v194;while true do if (1==v192) then v98[v193 + 1 ]=v194;v98[v193]=v194[v100[4]];break;end if (0==v192) then v193=v100[2];v194=v98[v100[775 -(201 + 571) ]];v192=1;end end elseif (v101==(1209 -(116 + 1022))) then v98[v100[2]]=v40(v89[v100[3]],nil,v73);elseif (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=75) then if (v101<=73) then local v195=v100[2];v98[v195](v21(v98,v195 + 1 ,v100[3]));elseif (v101>74) then v98[v100[2]][v100[3]]=v98[v100[4]];else local v297=0;local v298;local v299;local v300;local v301;while true do if (v297==0) then v298=v100[2];v299,v300=v91(v98[v298](v98[v298 + 1 ]));v297=1;end if (v297==1) then v93=(v300 + v298) -1 ;v301=0;v297=2;end if (v297==2) then for v414=v298,v93 do v301=v301 + 1 ;v98[v414]=v299[v301];end break;end end end elseif (v101<=76) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;elseif (v101==77) then v98[v100[2]]=v100[3];else v98[v100[2]]=v100[3] + v98[v100[4]] ;end elseif (v101<=(349 -265)) then if (v101<=81) then if (v101<=79) then local v197=0;local v198;while true do if (v197==0) then v198=v100[2];v98[v198](v21(v98,v198 + 1 + 0 ,v100[3]));break;end end elseif (v101==(292 -212)) then v98[v100[2]]=v98[v100[3]];elseif (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=82) then local v199=0;local v200;local v201;local v202;while true do if (v199==1) then v202=v100[3];for v377=1,v202 do v201[v377]=v98[v200 + v377 ];end break;end if (v199==0) then v200=v100[2];v201=v98[v200];v199=1;end end elseif (v101>83) then local v307=v100[2];local v308=v98[v307 + 2 ];local v309=v98[v307] + v308 ;v98[v307]=v309;if (v308>(0 -0)) then if (v309<=v98[v307 + 1 ]) then local v417=0;while true do if (0==v417) then v92=v100[3];v98[v307 + 3 ]=v309;break;end end end elseif (v309>=v98[v307 + 1 ]) then local v418=0;while true do if (v418==0) then v92=v100[3];v98[v307 + 3 ]=v309;break;end end end else v98[v100[2]]=v98[v100[3]] + v100[4] ;end elseif (v101<=87) then if (v101<=85) then local v203=0;local v204;local v205;local v206;local v207;while true do if (v203==0) then v204=v100[2];v205,v206=v91(v98[v204]());v203=1;end if (1==v203) then v93=(v206 + v204) -1 ;v207=859 -(814 + 45) ;v203=2;end if (v203==2) then for v380=v204,v93 do v207=v207 + (2 -1) ;v98[v380]=v205[v207];end break;end end elseif (v101==86) then local v312=v89[v100[1 + 2 ]];local v313;local v314={};v313=v18({},{[v7("\185\17\164\17\95\182\48","\235\230\78\205\127\59\211\72")]=function(v353,v354) local v355=v314[v354];return v355[1][v355[2]];end,[v7("\239\118\35\75\144\245\222\77\40\86","\156\176\41\77\46\231")]=function(v356,v357,v358) local v359=v314[v357];v359[1][v359[2]]=v358;end});for v361=1,v100[4] do v92=v92 + 1 ;local v362=v88[v92];if (v362[1]==80) then v314[v361-1 ]={v98,v362[3]};else v314[v361-1 ]={v72,v362[3]};end v97[ #v97 + 1 ]=v314;end v98[v100[2]]=v40(v312,v313,v73);else local v316=0;local v317;while true do if (v316==0) then v317=v100[2];v98[v317]=v98[v317]();break;end end end elseif (v101<=(32 + 56)) then v98[v100[2]]=v100[3]~=0 ;elseif (v101==89) then v98[v100[2]]();else local v318=0;local v319;while true do if (v318==0) then v319=v100[887 -(261 + 624) ];v98[v319]=v98[v319](v21(v98,v319 + 1 ,v100[4 -1 ]));break;end end end v92=v92 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- Thông tin liên hệ: https://urlvn.net/zvuq63y
